// // <auto-generated/>
// #nullable enable
//         
// namespace WordCount;
//
// /*
// Found Dag for job WordCountJob:
// Foreign Source <string> -> inputStream
// inputStream -[WordCount.WordCounter]-> wordCountStream
// */
//
// /* 
// Found constructors:
// WordCount.WordCounter.WordCounter(Orleans.Streams.IAsyncObserver<int>, Microsoft.Extensions.Logging.ILogger<WordCount.WordCounter>)
// */
//
// [global::Orleans.ImplicitStreamSubscription("WordCountInput")]
// public class wordCountStream(
//     global::Microsoft.Extensions.Logging.ILogger<wordCountStream> logger,
// 	global::Microsoft.Extensions.Logging.ILogger<global::WordCount.WordCounter> v1) :
//     global::Orleans.Grain,
//     global::Orleans.IGrainWithStringKey,
//     global::Orleans.Streams.IAsyncObserver<global::System.String>
// {
//     private global::Orleans.Streams.IAsyncStream<global::System.Int32> _outputStream = null!;
//     private global::WordCount.WordCounter _processor0 = null!;
//     
//     public override async Task OnActivateAsync(CancellationToken cancellationToken)
//     {
//         logger.LogInformation("Activating...");
//         
//         await base.OnActivateAsync(cancellationToken);
//         
//         var inputStreamProvider = this.GetStreamProvider("MemoryStream");
//         var inputStreamId = global::Orleans.Runtime.StreamId.Create("WordCountInput", this.GetPrimaryKeyString());
//         var inputStream = inputStreamProvider.GetStream<global::System.String>(inputStreamId);
//         
//         var outputStreamProvider = this.GetStreamProvider("MemoryStream");
//         var outputStreamId = global::Orleans.Runtime.StreamId.Create("wordCounterStream", this.GetPrimaryKeyString());
//         _outputStream = outputStreamProvider.GetStream<global::System.Int32>(outputStreamId);
//         
//         _processor0 = new global::WordCount.WordCounter(_outputStream, v1);
//         
//         await inputStream.SubscribeAsync(this);
//         
//         logger.LogInformation("Activated");
//     }
//     
//     public async Task OnNextAsync(global::System.String item, global::Orleans.Streams.StreamSequenceToken? token = null)
//     {
//         logger.LogInformation("Processing {item}", item);
//         await _processor0.OnNextAsync(item, token);                
//     }
//     
//     public async Task OnCompletedAsync()
//     {
//         await _processor0.OnCompletedAsync();
//     }
//     
//     public async Task OnErrorAsync(Exception ex)
//     {
//         logger.LogError(ex, "Error occurred");
//         await _processor0.OnErrorAsync(ex);
//     }
// }