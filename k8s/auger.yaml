apiVersion: v1
kind: Service
metadata:
  name: app-svc
spec:
  type: LoadBalancer
  selector:
    orleans/serviceId: fraud-detection-app
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-detection-app
  labels:
    orleans/serviceId: fraud-detection-app
spec:
  replicas: 3
  selector:
    matchLabels:
      orleans/serviceId: fraud-detection-app
  template:
    metadata:
      labels:
        orleans/serviceId: fraud-detection-app
        orleans/clusterId: fraud-detection-app
    spec:
      containers:
        - name: fraud-detection-app-container
          image: augerimg:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
            - containerPort: 11111
            - containerPort: 30000
          resources:
            requests:
              cpu: 2500m
              memory: 2500Mi
            limits:
              cpu: 2500m
              memory: 2500Mi
          env:
            - name: LOGGING__LOGLEVEL__SYSTEM
              value: "Warning"
            - name: DOTNET_GCHeapHardLimit
              value: "0"
            - name: ASPNETCORE_URLS
              value: "http://+:80"
            - name: RedisConnection
              value: "redis-svc:6379"
            - name: KafkaConnection
              value: "kafka-svc:9092"
            # Configure settings to let Orleans know which cluster it belongs to
            # and which pod it is running in
            - name: ORLEANS_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/serviceId']
            - name: ORLEANS_CLUSTER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/clusterId']
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOTNET_SHUTDOWNTIMEOUTSECONDS
              value: "20"
      terminationGracePeriodSeconds: 30
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: orleans-hosting
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "watch", "list", "delete", "patch" ]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: orleans-hosting-binding
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ''
roleRef:
  kind: Role
  name: orleans-hosting
  apiGroup: ''
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  selector:
      app: redis
  ports:
    - name: tcp
      protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP